---
# Octoprint Service - Startup Automatically
- name: Create systemd service file for Octoprint
  ansible.builtin.copy:
    dest: /etc/systemd/system/octoprint.service
    content: |
      [Unit]
      Description=Octoprint server
      After=network.target

      [Service]
      Type=simple
      User={{ ansible_user }}
      ExecStart={{ octoprint_path }}/venv/bin/octoprint serve
      Restart=always
      Environment=HOME=/home/{{ ansible_user }}/.octoprint

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd to apply new service
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable Octoprint service
  ansible.builtin.systemd:
    name: octoprint
    enabled: true

- name: Start Octoprint service
  ansible.builtin.systemd:
    name: octoprint
    state: started


# Webcam - Install / Setup
- name: Clone mjpg-streamer repository
  ansible.builtin.git:
    repo: 'https://github.com/jacksonliam/mjpg-streamer.git'
    dest: "/home/{{ ansible_user }}/mjpg-streamer"
    version: 'master'
  register: git_clone
  changed_when: git_clone == 0

- name: Change directory, set LD_LIBRARY_PATH, and run make
  ansible.builtin.shell: |
    export LD_LIBRARY_PATH=.
    make
  args:
    chdir: "/home/{{ ansible_user }}/mjpg-streamer/mjpg-streamer-experimental"
    executable: /bin/bash
    creates: "/home/{{ ansible_user }}/mjpg-streamer/mjpg-streamer-experimental/mjpg_streamer"
  environment:
    LD_LIBRARY_PATH: "."


# Webcam - Startup Automatically
- name: Create mjpg-streamer systemd service file
  ansible.builtin.copy:
    dest: /etc/systemd/system/mjpg-streamer.service
    content: |
      [Unit]
      Description=mjpg-streamer service
      After=network.target

      [Service]
      Type=simple
      ExecStart=/home/{{ ansible_user }}/mjpg-streamer/mjpg-streamer-experimental/mjpg_streamer \
        -i "/home/{{ ansible_user }}/mjpg-streamer/mjpg-streamer-experimental/input_uvc.so" \
        -o "/home/{{ ansible_user }}/mjpg-streamer/mjpg-streamer-experimental/output_http.so"
      WorkingDirectory=/home/{{ ansible_user }}/mjpg-streamer/mjpg-streamer-experimental/
      Restart=always
      User={{ ansible_user }}

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd to recognize new service
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start mjpg-streamer service
  ansible.builtin.systemd:
    name: mjpg-streamer
    enabled: true
    state: started
